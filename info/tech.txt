params:
	id
	login
	name
	passwd

storing attributes on client:

attributes->
bintree | key attribute_name int (4 chars)
	bintree | key preserved attribute id int
		string | 
	
//may be used cashing with crc32 of full name of attribute as key

[servers]
client has one server
server has many clients
client stores server id
server stores client pointers (bintree)

//client attachet to server on connection
//rooms are implemented on slave servers


[attributes]
///
	
.attr // attr of object
>obj //obj user links to
<obj[] //objs linked to user
|obj[] //objs linket to user via join table (for sql)

query started from .><| searched from user object 
query must ends with .attr
in [] can be placed indexes devided by ',' [1,2,3]

.name -> user name
>hero.health -> health of hero object belonged by user
<item[].id -> ids of items belong to user
|weapon[].id -> ids of items belong to user
>hero|weapons[].attack -> attack of weapons belong to hero belonged by user

//  >hero<item[1,2,3].price
{
	char* attr; //="user"
	char type; //=0
	char ids; //= "0"
}
{
	char* attr; //="hero"
	char type; //='>'
	char ids; //= "0"
}
{
	char* attr; //="item"
	char type; //='<'
	char ids; //="1,2,3"
}
{
	char* attr; //="price"
	char type; //='.'
	char ids; //=""
}